package(default_visibility = ["//visibility:public"])

load("@rules_ocaml//build:rules.bzl",
     "ocaml_ns_archive",
     "ocaml_module",
     "ppx_executable",
)

DEPS_1 = [
    "//lib/js_of_ocaml:js_of_ocaml",
    "@lwt//lib/lwt",
    "@lwt_log//lib/core"
]

#############################
####  Aggregate Targets  ####

#################
ocaml_ns_archive(
    name       = "lwt_log_js",
    ns         = "lwt_log_js",
    manifest = [
        ":Import",
        ":Lwt_log_js"
    ],
)

######################## Modules & Signatures ########################
ocaml_module(
    name          = "Lwt_log_js",
    struct        = "lwt_log_js.ml",
    sig           = "lwt_log_js.mli",
    deps          = DEPS_1 + [
        ":Import"
    ],
    ppx           = ":ppx_1.exe",
)

ocaml_module(
    name          = "Import",
    struct        = "import.ml",
    deps          = DEPS_1,
    ppx           = ":ppx_1.exe",
)


###############
ppx_executable(
    name    = "ppx_1.exe",
    main    = ":Ppx_driver",
    deps = [
        "//ppx/ppx_js/lib:ppx_js_rewriter"
    ],
)

#############
ocaml_module(
    name       = "Ppx_driver",
    struct     = ":ppx_driver.ml",
    visibility = ["//visibility:public"],
    deps       = ["@ppxlib//lib/ppxlib"],
)

########
genrule(
    name = "__ppx_driver__",
    outs = ["ppx_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ])
)

