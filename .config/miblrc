; mibl config

[mibl]
version = 0.1.0
grammar=1.0.0-BETA  ;; version number of config grammar, not obazl program

[srcs]


;; `echo $(PWD)` always included
;; include = test

;;;; excludes override includes
;; excluded by default:
;; _build (dune output dir)
;; bazel-bin, bazel-out etc. - bazel symlinks
;; hidden files and dirs (.git/, .github/, .merlin, etc.)

exclude = bzl  ;; bazel code only

exclude = api  ;; empty dunefile
exclude = runtime  ;; requires custom code
exclude = tools/version  ;; hand-coded translation of tuareg dunefile


;; exclude = benchmarks
;; these two are hand-rolled, always exclude

;; exclude = compiler
;; exclude = compiler/bin-js_of_ocaml
;; exclude = compiler/bin-jsoo_minify
;; exclude = compiler/lib
;; exclude = compiler/lib-cmdline
;; exclude = compiler/lib-findlib-support
;; exclude = compiler/lib-runtime-files
;; exclude = compiler/lib-runtime-files/gen
;; exclude = compiler/lib-runtime-files/tests
;; exclude = compiler/ppx
;; exclude = compiler/tests-check-prim

;; exclude = compiler/tests-compiler
;; exclude = compiler/tests-compiler/gen-rules
;; exclude = compiler/tests-compiler/util

;; exclude  = compiler/tests-dynlink
exclude = compiler/tests-io  ;; WIP, bad dunefile (unescaped '\' in string literal)
;; exclude = compiler/tests-jsoo
exclude = compiler/tests-jsoo/bin  ;; WIP - unimplemented 'with-accepted-exit-codes' field

;; exclude = compiler/tests-num
;;; exclude = compiler/tests-ocaml
;; exclude = compiler/tests-re
exclude = examples
exclude = examples/boulderdash

;; exclude = lib
;; exclude = lib/deriving_json
;; exclude = lib/gen_stubs
;; exclude = lib/js_of_ocaml
;; exclude = lib/lwt
;; exclude = lib/runtime
;; exclude = lib/tests
exclude = lib/tyxml
exclude = manual

;; exclude = ppx
;; exclude = ppx/ppx_deriving_json
;; exclude = ppx/ppx_js
;; exclude = ppx/ppx_js/as-lib
;; exclude = ppx/ppx_js/bin
;; exclude = ppx/ppx_js/lib
;; exclude = ppx/ppx_js/lib_internal
;; exclude = ppx/ppx_js/tests

;; exclude = tools
;; exclude = tools/select
;; exclude = tools/sourcemap
;; exclude = tools/toplevel_expect

;; exclude = toplevel
;; exclude = toplevel/bin
;; exclude = toplevel/examples
;; exclude = toplevel/examples/eval
exclude = toplevel/examples/lwt_toplevel
;; exclude = toplevel/examples/server
;; exclude = toplevel/lib
;; exclude = toplevel/test

