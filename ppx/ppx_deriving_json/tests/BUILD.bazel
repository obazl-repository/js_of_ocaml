package(default_visibility = ["//visibility:public"])

load("@bazel_skylib//rules:diff_test.bzl", "diff_test")

load("@rules_ocaml//build:rules.bzl",
     "ocaml_binary",
     "ocaml_library",
     "ocaml_ns_library",
     "ocaml_exec_module",
     "ocaml_module",
)

DEPS_1 = [
    "@opam_ppxlib//lib/ppxlib",
    "//tools/toplevel_expect:toplevel_expect_test",
    "//lib/deriving_json:js_of_ocaml_deriving",
    "//ppx/ppx_deriving_json/lib:ppx_deriving_json"
]

##############################
####  Executable Targets  ####
ocaml_binary(
    name     = "main.exe",
    main     = ":Main",
    visibility = ["//visibility:public"],
    target_compatible_with = ["@ocaml//platforms:vm?"]
)

ocaml_exec_module(
    name          = "Main",
    struct        = "main.ml",
    deps          = DEPS_1,
)

######################## Modules & Signatures ########################
############################# Rules ##################################

########
genrule(
    outs  = [
        "ppx.mlt.corrected"
    ],
    name  = "__ppx.mlt.corrected__",
    srcs  = [
        ":ppx.mlt",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json.cmi",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json_lexer.cmi"
    ],
    cmd   = " ".join([
        "$(execpath //ppx/ppx_js/tests:main.exe)",
        "$(location :ppx.mlt)",
    ]),
    exec_tools = [
        "//ppx/ppx_js/tests:main.exe"
    ]
)

########
genrule(
    outs  = [
        "gen.mlt.corrected"
    ],
    name  = "__gen.mlt.corrected__",
    srcs  = [
        ":gen.mlt",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json.cmi",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json_lexer.cmi"
    ],
    cmd   = " ".join([
        "$(execpath //ppx/ppx_js/tests:main.exe)",
        "$(location :gen.mlt)",
    ]),
    exec_tools = [
        "//ppx/ppx_js/tests:main.exe"
    ]
)

##########
diff_test(
    name  = "ppx.mlt.corrected.diff_test",
    file1  = ":ppx.mlt.corrected",
    file2  = ":ppx.mlt"
)

##########
diff_test(
    name  = "gen.mlt.corrected.diff_test",
    file1  = ":gen.mlt.corrected",
    file2  = ":gen.mlt"
)

