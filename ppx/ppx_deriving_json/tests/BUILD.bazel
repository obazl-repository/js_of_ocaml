package(default_visibility = ["//visibility:public"])

load("@rules_ocaml//build:rules.bzl",
     "ocaml_binary",
     "ocaml_ns_library",
     "ocaml_module",
)

DEPS_1 = [
    "@ppxlib//lib/ppxlib",
    "//tools/toplevel_expect:toplevel_expect_test",
    "//lib/deriving_json:js_of_ocaml_deriving",
    "//ppx/ppx_deriving_json/lib:ppx_deriving_json"
]

##############################
####  Executable Targets  ####
ocaml_binary(
    name     = "main.exe",
    main     = ":Main",
    visibility = ["//visibility:public"],
    target_compatible_with = ["@ocaml//host/target:vm?"]
)

######################## Modules & Signatures ########################
ocaml_module(
    name          = "Main",
    struct        = "main.ml",
    deps          = DEPS_1,
)

########################
####  Rule Targets  ####

################  rule  ################
genrule(
    outs  = [
        "ppx.mlt.corrected"
    ],
    name  = "__ppx.mlt.corrected__",
    srcs  = [
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json.cmi",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json_lexer.cmi",
        ":ppx.mlt"
    ],
    cmd   = " ".join([
        "$(execpath exe:main.bc)",
        "`realpath $(location :ppx.mlt)`",
    ]),
    exec_tools = [
        "exe:main.bc"
    ]
)
################  rule  ################
genrule(
    outs  = [
        "gen.mlt.corrected"
    ],
    name  = "__gen.mlt.corrected__",
    srcs  = [
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json.cmi",
        "//ppx/lib/deriving_json/js_of_ocaml_deriving.objs/byte:deriving_Json_lexer.cmi",
        ":gen.mlt"
    ],
    cmd   = " ".join([
        "$(execpath exe:main.bc)",
        "`realpath $(location :gen.mlt)`",
    ]),
    exec_tools = [
        "exe:main.bc"
    ]
)
################  rule  ################
genrule(
    outs  = [

    ],
    name  = "TEST",
    cmd   = " ".join([
        "$(execpath diff)",
        "ppx.mlt",
        "ppx.mlt.corrected",
    ]),
    exec_tools = [
        "diff"
    ]
)
################  rule  ################
genrule(
    outs  = [

    ],
    name  = "TEST",
    cmd   = " ".join([
        "$(execpath diff)",
        "gen.mlt",
        "gen.mlt.corrected",
    ]),
    exec_tools = [
        "diff"
    ]
)

