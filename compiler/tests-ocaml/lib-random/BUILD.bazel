package(default_visibility = ["//visibility:public"])

load("@rules_ocaml//build:rules.bzl",
     "ocaml_binary",
     "ocaml_ns_library",
     "ocaml_exec_module",
     "ocaml_module",
)

load("@rules_jsoo//build:rules.bzl", "jsoo_binary", "jsoo_library")

load("@aspect_rules_js//js:defs.bzl",
     "js_binary", "js_run_binary", "js_library", "js_test")

##############################
####  Executable Targets  ####
#############
js_binary(
    name        = "selfinit.exe.js",
    entry_point = ":selfinit.exe.jsoo",
    visibility  = ["//visibility:public"],
)

jsoo_binary(
    name     = "selfinit.exe.jsoo",
    main   = ":selfinit.exe",
    visibility = ["//visibility:public"],
)

ocaml_binary(
    name     = "selfinit.exe",
    main     = ":Selfinit",
    visibility = ["//visibility:public"],
)

ocaml_module(
    name          = "Selfinit",
    struct        = "selfinit.ml",
X4    opts          = ["-open", "Selfinit_execlib"],
    deps          = [":lib_random_execlib"],
    visibility    = ["//visibility:private"]
)

############################ Exec Libs ###############################
ocaml_ns_library(
    name = "lib_random_execlib",
    manifest = [
        ":Defaultinit",
        ":Testvectors"
    ],
    visibility = ["//visibility:private"],
)

######################## Modules & Signatures ########################

ocaml_module(
    name          = "Defaultinit",
    struct        = "defaultinit.ml",
X5    opts          = ["-open", "#f_execlib"],
    deps          =     visibility    = ["//visibility:private"]
)

ocaml_module(
    name          = "Testvectors",
    struct        = "testvectors.ml",
X5    opts          = ["-open", "#f_execlib"],
    deps          =     visibility    = ["//visibility:private"]
)


############################# Rules ##################################

########
genrule(
    outs  = [

    ],
    name  = "selfinit.reference",
    srcs  = [
        ":selfinit.reference",
        ":selfinit.referencejs"
    ],
    cmd   = " ".join([
        "$(execpath diff)",
        "`realpath $(location :selfinit.reference)`",
        "`realpath $(location :selfinit.referencejs)`",
    ]),
    exec_tools = [
        "diff"
    ]
)

